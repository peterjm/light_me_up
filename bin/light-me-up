#!/usr/bin/env ruby

require_relative "../lib/light_me_up"
require 'optimist'

brightness_range = [LightMeUp::Light.min_brightness, LightMeUp::Light.max_brightness]
temperature_range = [LightMeUp::Light.min_temperature, LightMeUp::Light.max_temperature]
options = Optimist.options do
  banner "Usage: #{$0} [options]"

  opt :toggle, "Toggle whether the lights are on or off", short: "T"
  opt :on, "Turn the light on"
  opt :off, "Turn the light off", short: "O"
  opt :ip_address, "Specify the IP address", type: :string, :default => ENV["ELGATO_IP_ADDRESS"]
  opt :defaults, "Set to default values"
  opt :brightness, "Set the brightness (%d to %d)" % brightness_range, type: :integer
  opt :temperature, "Set the temperature (%d to %d)" % temperature_range, type: :integer
end

options = options.select { |k,v| v }
options[:on] = false if options.delete(:off)
options.reverse_merge!(
  brightness: ENV["ELGATO_DEFAULT_BRIGHTNESS"].to_i,
  temperature: ENV["ELGATO_DEFAULT_TEMPERATURE"].to_i,
) if options.delete(:defaults)

api_client = LightMeUp::ApiClient.new(ip_address: options[:ip_address])

begin
  LightMeUp::SettingsUpdate.new(api_client, options).perform
rescue LightMeUp::SettingsUpdate::ToggleIncompatible => e
  Optimist.die :toggle, e.message
rescue LightMeUp::NoOptionsGiven
  Optimist.educate
rescue LightMeUp::Error => e
  STDERR.puts e.message
  exit 1
end
